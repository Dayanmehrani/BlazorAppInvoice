@page "/invoices/delete"
@inject BlazorAppInvoice.Data.BlazorAppInvoiceContext DB
@using BlazorAppInvoice
@inject NavigationManager NavigationManager
@using Microsoft.EntityFrameworkCore

<PageTitle>Delete</PageTitle>

<h1>Delete</h1>

<h3>Are you sure you want to delete this?</h3>
<div>
    <h4>Invoice</h4>
    <hr />
    @if (invoice is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">CustomerName</dt>
            <dd class="col-sm-10">@invoice.CustomerName</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Number</dt>
            <dd class="col-sm-10">@invoice.Number</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">InvoiceDate</dt>
            <dd class="col-sm-10">@invoice.InvoiceDate</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Invoice_Due_Date</dt>
            <dd class="col-sm-10">@invoice.Invoice_Due_Date</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">CurrencyCode</dt>
            <dd class="col-sm-10">@invoice.CurrencyCode</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Amount</dt>
            <dd class="col-sm-10">@invoice.Amount</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Description</dt>
            <dd class="col-sm-10">@invoice.Description</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Ispaid</dt>
            <dd class="col-sm-10">@invoice.IsPaid</dd>
        </dl>
        <EditForm method="post" Model="invoice" OnValidSubmit="DeleteInvoice" FormName="delete" Enhance>
            <button type="submit" class="btn btn-danger" disabled="@(invoice is null)">Delete</button> |
            <a href="/invoices">Back to List</a>
        </EditForm>
    }
</div>

@code {
    Invoice? invoice;

    [SupplyParameterFromQuery]
    public int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        invoice = await DB.Invoice.FirstOrDefaultAsync(m => m.Id == Id);

        if (invoice is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    public async Task DeleteInvoice()
    {
        DB.Invoice.Remove(invoice!);
        await DB.SaveChangesAsync();
        NavigationManager.NavigateTo("/invoices");
    }
}
